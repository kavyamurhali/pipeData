function getRandomColorHex(value){const hex="0123456789ABCDEF";let colorarray=[];for(let j=1;j<=value;j++){let color="#";for(let i=1;i<=6;i++)color+=hex[Math.floor(16*Math.random())];colorarray.push(color)}return colorarray}function compareValues(key,order="asc"){return function(a,b){if(!a.hasOwnProperty(key)||!b.hasOwnProperty(key))return 0;const varA="string"==typeof a[key]?a[key].toUpperCase():a[key],varB="string"==typeof b[key]?b[key].toUpperCase():b[key];let comparison=0;return varA>varB?comparison=1:varA<varB&&(comparison=-1),"desc"==order?-1*comparison:comparison}}function getSum(total,num){return total+num}function hexToRgb(hex){if(null!=hex&&null!=hex){var shorthandRegex=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;hex=hex.replace(shorthandRegex,function(m,r,g,b){return r+r+g+g+b+b});var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null}return null}var options_var={responsive:!0,maintainAspectRatio:!1,animation:{duration:0},legend:{position:"bottom",display:!1},layout:{padding:{left:20,right:20,top:4,bottom:4}},plugins:{labels:[{render:"percentage",fontColor:function(args){var rgb=hexToRgb(args.dataset.backgroundColor[args.index]),threshold=140,luminance;return.299*rgb.r+.587*rgb.g+.114*rgb.b>140?"black":"white"},precision:2,anchor:"end",align:"end",position:"border",rotation:0,offset:40,display:"auto"},{render:"label",arc:!0,fontColor:"#000",display:"auto",rotation:90,position:"outside"}]},onClick:function(evt,elements){if(elements&&elements.length){var segment=elements[0];"#ffffff"==segment._model.borderColor?(segment._model.borderColor="#0B6774",segment._model.outerRadius+=5,segment._model.borderWidth=3):"#0B6774"==segment._model.borderColor&&(segment._model.borderColor="#ffffff",segment._model.outerRadius-=5,segment._model.borderWidth=2)}}};function Attach_Click(nameofchart,objectofchart,column){document.getElementById(nameofchart).onclick=function(evt){var activePoints=objectofchart.getElementsAtEvent(evt);if(objectofchart.update(),activePoints.length>0){var clickedElementindex=activePoints[0]._index,label=objectofchart.data.labels[clickedElementindex];if(console.log(current_filter[nameofchart],label),current_filter[nameofchart].includes(label))checkifon&&(UpdateFilter(nameofchart,label,"remove"),Draw_Dashboard_2ndSource(tempmaindt,null));else if(UpdateFilter(nameofchart,label,"add"),"chartjs3"==nameofchart){let tempdata=new Array,tempdata4=tempmaindt;OtherOptionArray[0].forEach(a=>{var text=a.key;let tempdata2=tempdata4.filter(a=>a[column]==text);Array.prototype.unshift.apply(tempdata,tempdata2)}),tempfilterdt=tempdata,Draw_Dashboard_2ndSource(tempdata,nameofchart)}else{const temp=tempmaindt.filter(item=>item[column]==label);tempfilterdt=temp,Draw_Dashboard_2ndSource(temp,nameofchart)}}else checkifon&&Draw_Dashboard_2ndSource(tempmaindt,null)}}function UpdateFilter(nameofchart,value,type){"add"===type?current_filter[nameofchart].length<1?current_filter[nameofchart]=[value]:current_filter[nameofchart].push(value):"remove"==type&&(current_filter[nameofchart]=current_filter[nameofchart].filter(v=>v!==value))}function Attach_click_Tree(nameofchart,column,value){if(null!=value&&current_filter[nameofchart].includes(value)){const temp=tempmaindt.filter(item=>item[column]==value);current_filter[nameofchart]=value,UpdateFilter(nameofchart,value,"add"),tempfilterdt=temp,Draw_Dashboard_2ndSource(temp,nameofchart)}else checkifon&&(UpdateFilter(nameofchart,value,"remove"),current_filter[nameofchart]=null,Draw_Dashboard_2ndSource(tempmaindt,null))}var colors_array=["#3AE4FF","#E8E8E8","#2FE3FF","#D9D9D9","#42E5FF","#CACACA","#525A6B","#21C0D9","#B0B0B0"],colors_array_border=["#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"];const arrSum=arr=>arr.reduce((a,b)=>a+b,0);let tempmaindt=new Array,tempfilterdt=new Array,arrayofchart=new Array,checkifon=!1,OtherOptionArray=new Array,current_filter=new Object;function Draw_Dashboard_2ndSource(data,sourceoffilter){console.log(current_filter),null==sourceoffilter?(tempmaindt=data,checkifon=!1):checkifon=!0;let dataitem=crossfilter(data),fliparray=new Array;var ctx1=document.getElementById("chartjs1").getContext("2d"),ctx2=document.getElementById("chartjs2").getContext("2d"),ctx3=document.getElementById("chartjs3").getContext("2d"),ctx4=document.getElementById("chartjs4").getContext("2d"),ctx5=document.getElementById("chartjs5").getContext("2d");if(null!=Mapping_Array[0].PoF_Year&&""!=Mapping_Array[0].PoF_Year.trim()&&null!=Mapping_Array[0].PipeCount&&""!=Mapping_Array[0].PipeCount.trim()){let m_1,Group_m_1=dataitem.dimension(item=>item[Mapping_Array[0].PoF_Year]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].PipeCount]||null==item[Mapping_Array[0].PipeCount]?0:item[Mapping_Array[0].PipeCount]).all().map(a=>a.value);$("#m_1").html(parseFloat(Group_m_1).toFixed(2))}else $("#m_1").html("Map PoF_Year & PipeCount");if(null!=Mapping_Array[0].PoF_Year&&""!=Mapping_Array[0].PoF_Year.trim()&&null!=Mapping_Array[0].Length_Mi&&""!=Mapping_Array[0].Length_Mi.trim()){let m_2,Group_m_2=dataitem.dimension(item=>item[Mapping_Array[0].PoF_Year]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].Length_Mi]||null==item[Mapping_Array[0].Length_Mi]?0:item[Mapping_Array[0].Length_Mi]).all().map(a=>a.value);$("#m_2").html(parseFloat(Group_m_2).toFixed(2))}else $("#m_2").html("Map PoF_Year & Length_Mi");if(null!=Mapping_Array[0].PoF_Year&&""!=Mapping_Array[0].PoF_Year.trim()&&null!=Mapping_Array[0].BreakCount&&""!=Mapping_Array[0].BreakCount.trim()){let m_3,Group_m_3=dataitem.dimension(item=>item[Mapping_Array[0].PoF_Year]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].BreakCount]||null==item[Mapping_Array[0].BreakCount]?0:item[Mapping_Array[0].BreakCount]).all().map(a=>a.value);$("#m_3").html(parseFloat(Group_m_3).toFixed(2));let m_2,Group_m_2=dataitem.dimension(item=>item[Mapping_Array[0].PoF_Year]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].Length_Mi]||null==item[Mapping_Array[0].Length_Mi]?0:item[Mapping_Array[0].Length_Mi]).all().map(a=>a.value);$("#m_4").html((parseFloat(Group_m_3)/parseFloat(Group_m_2)*100).toFixed(2))}else $("#m_3").html("Map PoF_Year & BreakCount"),$("#m_4").html("Map PoF_Year & BreakCount");if(null!=Mapping_Array[0].InstallYear&&""!=Mapping_Array[0].InstallYear.trim()&&null!=Mapping_Array[0].BreakCount&&""!=Mapping_Array[0].BreakCount.trim()&&"chartjs1"!=sourceoffilter){let Dim_Chart1,Group_Chart1=dataitem.dimension(item=>parseInt(item[Mapping_Array[0].InstallYear])).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].BreakCount]||null==item[Mapping_Array[0].BreakCount]?0:item[Mapping_Array[0].BreakCount]).top(9);var config1={type:"line",data:{datasets:[{data:(Group_Chart1=Group_Chart1.sort(compareValues("key","acs"))).map(i=>Math.round(i.value)),backgroundColor:colors_array[0],label:"Breaks per Install Year",fill:!1}],labels:Group_Chart1.map(i=>i.key)},options:{responsive:!0,maintainAspectRatio:!1,animation:!1,legend:{display:!1},layout:{padding:{left:8,right:8,top:12,bottom:8}},plugins:{labels:[{render:"percentage",fontColor:function(args){var rgb=hexToRgb(args.dataset.backgroundColor[args.index]),threshold=140,luminance;return.299*rgb.r+.587*rgb.g+.114*rgb.b>140?"black":"white"},precision:2,position:"border"},{render:"label",arc:!0,fontColor:"#000",position:"outside"}]}}};null!=arrayofchart[0]&&arrayofchart[0].destroy();let chart1=new Chart(ctx1,config1);arrayofchart[0]=chart1,Attach_Click("chartjs1",chart1,Mapping_Array[0].InstallYear),fliparray.push({Flip:!0,ID:"#chartjs1"})}else"chartjs1"!=sourceoffilter&&fliparray.push({Flip:!1,ID:"#chartjs1"});if(null!=Mapping_Array[0].PipeMaterial&&""!=Mapping_Array[0].PipeMaterial.trim()&&null!=Mapping_Array[0].Probability&&""!=Mapping_Array[0].Probability.trim()&&"chartjs2"!=sourceoffilter){let Dim_Chart2,Group_Chart2=dataitem.dimension(item=>item[Mapping_Array[0].PipeMaterial]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].Probability]||null==item[Mapping_Array[0].Probability]?0:item[Mapping_Array[0].Probability]).top(9);var config2={type:"pie",data:{datasets:[{data:Group_Chart2.map(i=>Math.round(i.value)),backgroundColor:colors_array,borderColor:colors_array_border,hoverBackgroundColor:colors_array,hoverBorderColor:"#0B6774",hoverBorderWidth:2,label:"Sum Probability by Pipe Material"}],labels:Group_Chart2.map(i=>i.key)},options:options_var};null!=arrayofchart[1]&&arrayofchart[1].destroy();let chart2=new Chart(ctx2,config2);arrayofchart[1]=chart2,Attach_Click("chartjs2",chart2,Mapping_Array[0].PipeMaterial),fliparray.push({Flip:!0,ID:"#chartjs2"})}else"chartjs2"!=sourceoffilter&&fliparray.push({Flip:!1,ID:"#chartjs2"});if(null!=Mapping_Array[0].PipeDiameter&&""!=Mapping_Array[0].PipeDiameter.trim()&&null!=Mapping_Array[0].Probability&&""!=Mapping_Array[0].Probability.trim()&&"chartjs3"!=sourceoffilter){let Dim_Chart3=dataitem.dimension(item=>item[Mapping_Array[0].PipeDiameter]),Group_Chart3=Dim_Chart3.group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].Probability]||null==item[Mapping_Array[0].Probability]?0:item[Mapping_Array[0].Probability]).top(4);const total=Dim_Chart3.group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].Probability]||null==item[Mapping_Array[0].Probability]?0:item[Mapping_Array[0].Probability]).all();let difference=total.filter(({value:id1})=>!Group_Chart3.some(({value:id2})=>id2===id1));difference.length?(OtherOptionArray[0]=difference,Group_Chart3.push({key:"Other",value:difference.map(a=>a.value).reduce(getSum).toFixed(2)})):OtherOptionArray=new Array;var config3={type:"pie",data:{datasets:[{data:Group_Chart3.map(i=>Math.round(i.value)),backgroundColor:colors_array,borderColor:colors_array_border,hoverBackgroundColor:colors_array,hoverBorderColor:"#0B6774",hoverBorderWidth:2,label:"Sum Probability by PipeDiameter"}],labels:Group_Chart3.map(i=>i.key)},options:options_var};null!=arrayofchart[2]&&arrayofchart[2].destroy();let chart3=new Chart(ctx3,config3);arrayofchart[2]=chart3,Attach_Click("chartjs3",chart3,Mapping_Array[0].PipeDiameter),fliparray.push({Flip:!0,ID:"#chartjs3"})}else"chartjs3"!=sourceoffilter&&fliparray.push({Flip:!1,ID:"#chartjs3"});if(null!=Mapping_Array[0].CoFCategory&&""!=Mapping_Array[0].CoFCategory.trim()&&null!=Mapping_Array[0].Probability&&""!=Mapping_Array[0].Probability.trim()&&"chartjs4"!=sourceoffilter){let Dim_Chart4,Group_Chart4=dataitem.dimension(item=>item[Mapping_Array[0].CoFCategory]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].Probability]||null==item[Mapping_Array[0].Probability]?0:item[Mapping_Array[0].Probability]).top(5);var config4={type:"pie",data:{datasets:[{data:Group_Chart4.map(i=>Math.round(i.value)),backgroundColor:colors_array,borderColor:colors_array_border,hoverBackgroundColor:colors_array,hoverBorderColor:"#0B6774",hoverBorderWidth:2,label:"Sum Probability by CoFCategory"}],labels:Group_Chart4.map(i=>i.key)},options:options_var};null!=arrayofchart[3]&&arrayofchart[3].destroy();let chart4=new Chart(ctx4,config4);arrayofchart[3]=chart4,Attach_Click("chartjs4",chart4,Mapping_Array[0].CoFCategory),fliparray.push({Flip:!0,ID:"#chartjs4"})}else"chartjs4"!=sourceoffilter&&fliparray.push({Flip:!1,ID:"#chartjs4"});if(null!=Mapping_Array[0].PoFCategory&&""!=Mapping_Array[0].PoFCategory.trim()&&null!=Mapping_Array[0].PipeCount&&""!=Mapping_Array[0].PipeCount.trim()&&"my_dataviz"!=sourceoffilter){let Dim_Chart412,Group_Chart412=dataitem.dimension(item=>item[Mapping_Array[0].PoFCategory]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].PipeCount]||null==item[Mapping_Array[0].PipeCount]?0:item[Mapping_Array[0].PipeCount]).order(a=>a[Mapping_Array[0].PoFCategory]).top(9);treemap2={init:function init(){$("#my_dataviz").html(""),d3plus.viz().container("#my_dataviz").data(Group_Chart412).type("tree_map").id("key").size("value").font({family:"Poppins'",size:30}).mouse({move:!1,click:function(event){console.log("Yes"),null!=event.key&&Attach_click_Tree("my_dataviz","PoFCategory",event.key)}}).draw()}},treemap2.init(),fliparray.push({Flip:!0,ID:"#my_dataviz"})}else"my_dataviz"!=sourceoffilter&&fliparray.push({Flip:!1,ID:"#my_dataviz"});if(null!=Mapping_Array[0].CoFCategory&&""!=Mapping_Array[0].CoFCategory.trim()&&null!=Mapping_Array[0].PipeCount&&""!=Mapping_Array[0].PipeCount.trim()&&"my_dataviz2"!=sourceoffilter){let Dim_Chart41,Group_Chart41=dataitem.dimension(item=>item[Mapping_Array[0].CoFCategory]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].PipeCount]||null==item[Mapping_Array[0].PipeCount]?0:item[Mapping_Array[0].PipeCount]).order(a=>a[Mapping_Array[0].CoFCategory]).top(9);treemap={init:function init(){$("#my_dataviz2").html(""),d3plus.viz().container("#my_dataviz2").data(Group_Chart41).type("tree_map").id("key").size("value").font({family:"Poppins'",size:30}).mouse({move:!1,click:function(event){null!=event.key&&Attach_click_Tree("my_dataviz2","CoFCategory",event.key)}}).draw()}},treemap.init(),fliparray.push({Flip:!0,ID:"#my_dataviz2"})}else"my_dataviz2"!=sourceoffilter&&fliparray.push({Flip:!1,ID:"#my_dataviz2"});if(null!=Mapping_Array[0].Contract&&""!=Mapping_Array[0].Contract.trim()&&"chartjs5"!=sourceoffilter){let Dim_Chart5,Group_Chart5=dataitem.dimension(item=>item[Mapping_Array[0].Contract]).group().reduceSum(item=>"Unknown"==item[Mapping_Array[0].Probability]||null==item[Mapping_Array[0].Probability]?0:item[Mapping_Array[0].Probability]).top(8);var config5={type:"pie",data:{datasets:[{data:Group_Chart5.map(i=>Math.round(i.value)),backgroundColor:colors_array,borderColor:colors_array_border,hoverBackgroundColor:colors_array,hoverBorderColor:"#0B6774",hoverBorderWidth:2,label:"Sum Probability by Contract"}],labels:Group_Chart5.map(i=>i.key)},options:options_var};null!=arrayofchart[4]&&arrayofchart[4].destroy();let chart5=new Chart(ctx5,config5);arrayofchart[4]=chart5,Attach_Click("chartjs5",chart5,Mapping_Array[0].Contract),fliparray.push({Flip:!0,ID:"#chartjs5"})}else"chartjs5"!=sourceoffilter&&fliparray.push({Flip:!1,ID:"#chartjs5"});"metrics"==$(".is-active").data("module")?($("#datamappingMain").show(),$("#dataexplorepanel").hide()):$("#datamappingMain").hide(),$("#loadermain").is(":visible")&&setTimeout(function(){$("#loadermain").hide()},500),fliparray.forEach(a=>{a.Flip?$(a.ID).closest(".flipper").addClass("flip"):$(a.ID).closest(".flipper").removeClass("flip")})}